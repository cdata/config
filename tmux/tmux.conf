# Set 256 color term..
set -g default-terminal "screen-256color"

# Compatibility for pbcopy and pbpaste on OSX
# Note: only use on OSX systems!
#set-option -g default-command "reattach-to-user-namespace -l bash"

set-option -g status on
set-option -g status-interval 2
# set-option -g status-utf8 on
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
#set-option -g status-left "#(~/repositories/setup/support/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/repositories/setup/support/tmux-powerline/powerline.sh right)"
# Fancy 'current window' format..
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour24]#[fg=colour250, bg=colour24] #I #W #[fg=colour235, bg=colour24]"

set-window-option -g window-status-current-format " #[fg=colour187]#I #W "
set-window-option -g window-status-format " #[fg=colour247]#I #W "
set-window-option -g window-status-current-bg colour235
set -g status-bg colour235

# Allow programs to rename titles..
set-window-option -g allow-rename

# Do rename automatically..
set-window-option -g automatic-rename

# http://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/
# https://github.com/erikw/dotfiles/blob/personal/.tmux.conf
# http://blog.sanctum.geek.nz/category/tmux/
# https://github.com/creaktive/rainbarf

# Split window short-cuts
bind | split-window -h
bind _ split-window -v

# Mo history
set -g history-limit 1000000

# Move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes like vim
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# vi-style controls for copy mode
set-window-option -g mode-keys vi

# Not sure what this does yet..
#set-option -g status-keys vi

# Don't wait when I press <esc>
set -s escape-time 1

# utf8 support
# set-window-option -g utf8 on

# Disable mouse
# set-window-option -g mode-mouse off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

